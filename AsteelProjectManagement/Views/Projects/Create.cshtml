@model AsteelProjectManagement.Models.Projects
<style>
    /* General Styling */


    .form-card h3 {
        color: #007bff;
    }

    .form-label {
        font-weight: bold;
        color: #495057;
    }

    .form-control {
        border-radius: 0.25rem;
        box-shadow: none;
        border-color: #ced4da;
    }

        .form-control:focus {
            border-color: #007bff;
            box-shadow: 0 0 0 0.2rem rgba(38, 143, 255, 0.25);
        }

    .text-danger {
        font-size: 0.875rem;
        margin-top: 0.25rem;
    }

    .btn-primary {
        background-color: #1ab188;
        border-color: #1ab188;
    }

        .btn-primary:hover {
            background-color: #0056b3;
            border-color: #004085;
        }
</style>
<form id="step1Form" method="post" action="/Projects/Create">
    <div class="containeer mt-5">
        <div class="form-card p-4 shadow-sm rounded">
            <div class="form-group">
                @Html.LabelFor(m => m.ProjectName, new { @class = "form-label" })
                @Html.TextBoxFor(m => m.ProjectName, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.ProjectName, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Description, new { @class = "form-label" })
                @Html.TextBoxFor(m => m.Description, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Description, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Status, new { @class = "form-label" })
                @Html.DropDownListFor(m => m.Status,
                    new SelectList(new List<SelectListItem>
                    {
                        new SelectListItem { Value = "", Text = "Select Status" },
                        new SelectListItem { Value = "Not Started", Text = "Not Started" },
                        new SelectListItem { Value = "In Progress", Text = "In Progress" },
                        new SelectListItem { Value = "Completed", Text = "Completed" }
                    }, "Value", "Text"),
                    new { @class = "form-control" }
                )
                @Html.ValidationMessageFor(m => m.Status, "", new { @class = "text-danger" })
            </div>


            <div class="form-group">
                @Html.LabelFor(m => m.Priority, new { @class = "form-label" })
                @Html.DropDownListFor(m => m.Priority,
                    new SelectList(new List<SelectListItem>
                    {
                        new SelectListItem { Value = "", Text = "Select Priority" },
                        new SelectListItem { Value = "Low", Text = "Low" },
                        new SelectListItem { Value = "Medium", Text = "Medium" },
                        new SelectListItem { Value = "High", Text = "High" }
                    }, "Value", "Text"),
                    new { @class = "form-control" }
                )
                @Html.ValidationMessageFor(m => m.Priority, "", new { @class = "text-danger" })
            </div>



        </div>
    </div>
</form>
